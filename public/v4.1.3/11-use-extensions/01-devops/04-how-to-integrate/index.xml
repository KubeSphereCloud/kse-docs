<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>工具集成 on KubeSphere 企业版</title>
    <link>/v4.1.3/11-use-extensions/01-devops/04-how-to-integrate/</link>
    <description>Recent content in 工具集成 on KubeSphere 企业版</description>
    <generator>Hugo</generator>
    <language>zh</language>
    <copyright>©2022 QingCloud, Inc. All rights reserved</copyright>
    <atom:link href="/v4.1.3/11-use-extensions/01-devops/04-how-to-integrate/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>将 SonarQube 集成到流水线</title>
      <link>/v4.1.3/11-use-extensions/01-devops/04-how-to-integrate/01-sonarqube/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/v4.1.3/11-use-extensions/01-devops/04-how-to-integrate/01-sonarqube/</guid>
      <description>SonarQube 是一种主流的代码质量持续检测工具，可用于代码库的静态和动态分析。SonarQube 集成到 KubeSphere 企业版流水线后，如果在运行的流水线中检测到问题，将会在仪表板上直接显示常见代码问题，例如 Bug 和漏洞。&#xA;本文档演示如何将 SonarQube 集成到流水线中。在使用 Jenkinsfile 创建流水线之前，请先参考以下步骤。&#xA;前提条件 KubeSphere 企业版平台需要安装并启用 DevOps 扩展组件。&#xA;安装 SonarQube 服务器 要将 SonarQube 集成到您的流水线，必须先在集群节点上安装 SonarQube 服务器。&#xA;安装 Helm，以便使用该工具安装 SonarQube。例如，运行以下命令安装 Helm 3：&#xA;curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash 查看 Helm 版本。&#xA;helm version version.BuildInfo{Version:&amp;#34;v3.4.1&amp;#34;, GitCommit:&amp;#34;c4e74854886b2efe3321e185578e6db9be0a6e29&amp;#34;, GitTreeState:&amp;#34;clean&amp;#34;, GoVersion:&amp;#34;go1.14.11&amp;#34;} 说明 有关更多信息，请参阅 Helm 文档。&#xA;执行以下命令安装 SonarQube 服务器。&#xA;helm upgrade --install sonarqube sonarqube --repo https://charts.kubesphere.io/main -n \ kubesphere-devops-system --create-namespace --set service.type=NodePort 说明 请确保使用 Helm 3 安装 SonarQube 服务器。</description>
    </item>
    <item>
      <title>将 Harbor 集成到流水线</title>
      <link>/v4.1.3/11-use-extensions/01-devops/04-how-to-integrate/02-harbor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/v4.1.3/11-use-extensions/01-devops/04-how-to-integrate/02-harbor/</guid>
      <description>本文档演示如何将 Harbor 集成到 KubeSphere 企业版流水线。&#xA;前提条件 KubeSphere 企业版平台需要安装并启用 DevOps 扩展组件。&#xA;已有一个企业空间、一个 DevOps 项目和一个用户 (例如 project-regular)，并已邀请该用户至 DevOps 项目且授予 operator 角色。&#xA;安装 Harbor 执行以下命令，使用 Helm 3 安装 Harbor。&#xA;helm repo add harbor https://helm.goharbor.io # 如需快速安装，您可以通过 NodePort 暴露 Harbor 并禁用 tls。 # 请将 externalURL 设置为您的一个节点 IP，并确保 Jenkins 能够访问它。 helm install harbor-release harbor/harbor --set expose.type=nodePort,externalURL=http://$ip:30002,expose.tls.enabled=false 获取 Harbor 凭证 安装 Harbor 后，访问 &amp;lt;NodeIP&amp;gt;:30002 并使用默认账户和密码 (admin/Harbor12345) 登录 Web 控制台。&#xA;在左侧导航栏中点击项目，然后点击新建项目。&#xA;在弹出的对话框中，设置项目名称 ks-devops-harbor 并点击确定。&#xA;点击刚刚创建的项目，在机器人账户页签下点击添加机器人账户。&#xA;在弹出的对话框中，为机器人账户设置名称 robot-test 和过期时间。然后在权限中勾选制品（Artifact）和仓库的所有权限。点击完成。</description>
    </item>
  </channel>
</rss>
