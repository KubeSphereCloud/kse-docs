<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>KubeSphere 企业版</title>
    <link>/</link>
    <description>Recent content on KubeSphere 企业版</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>©2022 QingCloud, Inc. All rights reserved</copyright><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>环境要求</title>
      <link>/v4.1.3/03-installation-and-upgrade/01-preparations/01-supported-k8s/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1.3/03-installation-and-upgrade/01-preparations/01-supported-k8s/</guid>
      <description>本节介绍 KubeSphere 企业版的环境要求。
系统要求 系统 最低要求（每个节点） 生产环境要求（每个节点） Ubuntu 16.04，18.04，20.04，22.04
CPU：2 核，内存：4 GB，硬盘：40 GB
CPU：8 核，内存：16 GB，硬盘：200 GB
Debian Buster，Stretch
CPU：2 核，内存：4 GB，硬盘：40 GB
CPU：8 核，内存：16 GB，硬盘：200 GB
CentOS 7.x，CentOS Stream
CPU：2 核，内存：4 GB，硬盘：40 GB
CPU：8 核，内存：16 GB，硬盘：200 GB
Red Hat Enterprise Linux 7.x，8.x
CPU：2 核，内存：4 GB，硬盘：40 GB
CPU：8 核，内存：16 GB，硬盘：200 GB
SUSE Linux Enterprise Server 15/openSUSE Leap 15.2
CPU：2 核，内存：4 GB，硬盘：40 GB
CPU：8 核，内存：16 GB，硬盘：200 GB
存储要求 集群中必须存在一个可用的默认存储类。
存储类定义了可供容器使用的一类存储卷。如果您在安装 KubeSphere 企业版时未设置外部持久化存储系统，KubeSphere 企业版将使用集群节点的本地存储系统作为持久化存储系统，并自动创建对应的 local 存储类。如果使用外部持久化存储系统，您需要为 KubeSphere 企业版集群安装存储插件，并创建存储类以定义可供使用的存储卷类型。有关如何安装存储插件，请联系您的存储系统提供商或参阅配置外部持久化存储。</description>
    </item>
    
    <item>
      <title>仅卸载{ks_product_left}</title>
      <link>/v4.1.3/03-installation-and-upgrade/04-uninstall-kubesphere/01-uninstall-kubesphere-only/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1.3/03-installation-and-upgrade/04-uninstall-kubesphere/01-uninstall-kubesphere-only/</guid>
      <description>本节介绍如何卸载 KubeSphere 企业版。当前集群中运行的 Kubernetes 将不会被卸载。
警告 虽然此操作不会卸载 Kubernetes，如果当前集群中运行的业务使用了 KubeSphere 企业版提供的功能，此操作仍然可能导致业务中断。
此操作不能撤销，请谨慎执行此操作。
前提条件 为避免数据丢失，请提前备份所有重要数据。
卸载扩展组件 登录任意集群节点，执行以下命令查看集群中已安装的扩展组件。
kubectl get installplan 卸载指定扩展组件或所有扩展组件。
卸载指定扩展组件。
kubectl delete installplan {InstallPlan Name} 说明 可根据第一步的命令获取扩展组件的 InstallPlan Name。
如果显示如下信息，表明该扩展组件卸载成功。
installplan.kubesphere.io &amp;#34;{InstallPlan Name}&amp;#34; deleted 卸载全部扩展组件。
kubectl delete installplan --all 输出信息应如下所示：
installplan.kubesphere.io &amp;#34;devops&amp;#34; deleted installplan.kubesphere.io &amp;#34;dmp&amp;#34; deleted installplan.kubesphere.io &amp;#34;gatekeeper&amp;#34; deleted installplan.kubesphere.io &amp;#34;gateway&amp;#34; deleted installplan.kubesphere.io &amp;#34;kubeedge&amp;#34; deleted installplan.kubesphere.io &amp;#34;kubefed&amp;#34; deleted installplan.kubesphere.io &amp;#34;metrics-server&amp;#34; deleted installplan.kubesphere.io &amp;#34;network&amp;#34; deleted installplan.kubesphere.io &amp;#34;openpitrix&amp;#34; deleted installplan.kubesphere.io &amp;#34;opensearch&amp;#34; deleted installplan.</description>
    </item>
    
    <item>
      <title>配置云上存储设备</title>
      <link>/v4.1.3/03-installation-and-upgrade/01-preparations/04-configure-external-persistent-storage/01-configure-storage-devices-on-cloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1.3/03-installation-and-upgrade/01-preparations/04-configure-external-persistent-storage/01-configure-storage-devices-on-cloud/</guid>
      <description>本节介绍如何在生产环境中为 KubeSphere 企业版配置云上存储设备。
您可以在云环境中创建 API 密钥，并设置 KubeSphere 企业版使用 API 密钥通过容器存储接口（CSI）与云环境对接。用户在 KubeSphere 企业版平台上创建卷并将卷挂载到容器组时，KubeSphere 企业版将自动在云环境中创建存储设备供容器组使用。以下以青云QingCloud 为例介绍具体操作。有关其他云环境中的操作，请参阅云环境的用户指南或联系您的云服务提供商。
前提条件 您需要获取一个青云QingCloud 帐户，并确保帐户余额可以创建所需的存储设备。有关更多信息，请访问青云QingCloud 官网。
操作步骤 登录青云QingCloud 控制台，点击页面右上角的用户名，然后在下拉列表中选择 API 密钥。
在 API 密钥页面，点击创建。
在创建API密钥对话框，设置密钥的名称，然后点击提交。
在弹出的对话框将私钥文件下载到本地。
警告 KubeSphere 企业版将使用该私钥与云上的存储设备对接。请妥善保存该私钥文件以避免用户数据泄露。
在 API 密钥列表中获取 API 密钥的 ID。
登录用于执行 KubeSphere 企业版安装操作的集群节点，执行以下命令创建存储插件配置文件：
vi csi-qingcloud.yaml 将以下信息添加到配置文件中，并保存文件供后续安装 KubeSphere 企业版时使用：
config: qy_access_key_id: &amp;#34;&amp;lt;key ID&amp;gt;&amp;#34; qy_secret_access_key: &amp;#34;&amp;lt;access key&amp;gt;&amp;#34; zone: &amp;#34;&amp;lt;zone ID&amp;gt;&amp;#34; sc: isDefaultClass: true 将以下参数替换为实际值：
参数 描述 &amp;lt;key ID&amp;gt;
API 密钥的 ID。
&amp;lt;access key&amp;gt;
API 密钥的私钥文本。</description>
    </item>
    
    <item>
      <title>添加集群节点</title>
      <link>/v4.1.3/03-installation-and-upgrade/05-add-and-delete-cluster-nodes/01-add-cluster-nodes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1.3/03-installation-and-upgrade/05-add-and-delete-cluster-nodes/01-add-cluster-nodes/</guid>
      <description>本节介绍如何添加 KubeSphere 企业版集群节点。
节点添加过程中将用到开源工具 KubeKey。有关 KubeKey 的更多信息，请访问 GitHub KubeKey 仓库。
说明 本节介绍的节点添加方式仅适用于 Kubernetes 通过 KubeKey 安装的场景。如果您的 Kubernetes 不是通过 KubeKey 安装，请参阅 Kubernetes 官方文档添加节点。
前提条件 您需要联系 KubeSphere 企业版的交付服务专家获取 KubeSphere 企业版 v4.1.3 安装包。
新增节点的操作系统和版本须为 Ubuntu 16.04、Ubuntu 18.04、Ubuntu 20.04、Ubuntu 22.04、Debian 9、Debian 10、CentOS 7、CentOS Stream、RHEL 7、RHEL 8、SLES 15 或 openSUSE Leap 15。多个集群节点的操作系统可以不同。关于其它操作系统和版本支持，请咨询青云科技官方解决方案专家或交付服务专家。
为确保集群具有足够的计算和存储资源，建议新增节点配置至少 8 个 CPU 核心，16 GB 内存和 200 GB 磁盘空间。除此之外，建议在每台集群节点的 /var/lib/docker（对于 Docker）或 /var/lib/containerd（对于 containerd） 目录额外挂载至少 200 GB 磁盘空间用于存储容器运行时数据。
如果添加控制平面节点，您需要提前为集群配置高可用性。如果您使用负载均衡器，请确保负载均衡器监听所有控制平面节点的 6443 端口。有关更多信息，请参阅配置高可用性。
如果您的集群节点无法连接互联网，您还需要准备一台 Linux 服务器用于创建私有镜像服务，该服务器必须与 KubeSphere 企业版集群节点网络连通并且在 /mnt/registry 目录挂载至少 100 GB 磁盘空间。</description>
    </item>
    
    <item>
      <title>在线安装 Kubernetes 和 KubeSphere 企业版</title>
      <link>/v4.1.3/03-installation-and-upgrade/02-install-kubesphere/01-online-install-kubernetes-and-kubesphere/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1.3/03-installation-and-upgrade/02-install-kubesphere/01-online-install-kubernetes-and-kubesphere/</guid>
      <description>本节介绍如何在可访问 Internet 的环境下安装 Kubernetes 和 KubeSphere 企业版。
安装过程中将用到开源工具 KubeKey。有关 KubeKey 的更多信息，请访问 GitHub KubeKey 仓库。
前提条件 您需要准备至少 1 台 Linux 服务器作为集群节点。在生产环境中，为确保集群具备高可用性，建议准备至少 5 台 Linux 服务器，其中 3 台作为控制平面节点，另外 2 台作为工作节点。如果您在多台 Linux 服务器上安装 KubeSphere 企业版，请确保所有服务器属于同一子网。
集群节点的操作系统和版本须为 Ubuntu 16.04、Ubuntu 18.04、Ubuntu 20.04、Ubuntu 22.04、Debian 9、Debian 10、CentOS 7、CentOS Stream、RHEL 7、RHEL 8、SLES 15 或 openSUSE Leap 15。多台服务器的操作系统可以不同。关于其它操作系统和版本支持，请咨询青云科技官方解决方案专家或交付服务专家。
在生产环境中，为确保集群具有足够的计算和存储资源，建议每台集群节点配置至少 8 个 CPU 核心、16 GB 内存和 200 GB 磁盘空间。除此之外，建议在每台集群节点的 /var/lib/docker（对于 Docker）或 /var/lib/containerd（对于 containerd） 目录额外挂载至少 200 GB 磁盘空间用于存储容器运行时数据。
在生产环境中，建议提前为 KubeSphere 企业版集群配置高可用性以避免单个控制平面节点出现故障时集群服务中断。有关更多信息，请参阅配置高可用性。</description>
    </item>
    
    <item>
      <title>离线安装 Kubernetes 和 KubeSphere 企业版</title>
      <link>/v4.1.3/03-installation-and-upgrade/02-install-kubesphere/02-install-kubernetes-and-kubesphere/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1.3/03-installation-and-upgrade/02-install-kubesphere/02-install-kubernetes-and-kubesphere/</guid>
      <description>本节介绍如何离线安装 Kubernetes 和 KubeSphere 企业版。部署环境无需访问外网，可完全离线安装 KubeSphere 企业版和扩展组件。
安装过程中将用到开源工具 KubeKey。有关 KubeKey 的更多信息，请访问 GitHub KubeKey 仓库。
前提条件 您需要联系 KubeSphere 企业版的交付服务专家获取 KubeSphere 企业版 v4.1.3 安装包。
您需要准备至少 1 台 Linux 服务器作为集群节点。在生产环境中，为确保集群具备高可用性，建议准备至少 5 台 Linux 服务器，其中 3 台作为控制平面节点，另外 2 台作为工作节点。如果您在多台 Linux 服务器上安装 KubeSphere 企业版，请确保所有服务器属于同一子网。
集群节点的操作系统和版本须为 Ubuntu 16.04、Ubuntu 18.04、Ubuntu 20.04、Ubuntu 22.04、Debian 9、Debian 10、CentOS 7、CentOS Stream、RHEL 7、RHEL 8、SLES 15 或 openSUSE Leap 15。多台服务器的操作系统可以不同。关于其它操作系统和版本支持，请咨询青云科技官方解决方案专家或交付服务专家。
在生产环境中，为确保集群具有足够的计算和存储资源，建议每台集群节点配置至少 8 个 CPU 核心、16 GB 内存和 200 GB 磁盘空间。除此之外，建议在每台集群节点的 /var/lib/docker（对于 Docker）或 /var/lib/containerd（对于 containerd） 目录额外挂载至少 200 GB 磁盘空间用于存储容器运行时数据。</description>
    </item>
    
    <item>
      <title>删除集群节点</title>
      <link>/v4.1.3/03-installation-and-upgrade/05-add-and-delete-cluster-nodes/02-delete-cluster-nodes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1.3/03-installation-and-upgrade/05-add-and-delete-cluster-nodes/02-delete-cluster-nodes/</guid>
      <description>本节介绍如何删除 KubeSphere 企业版集群节点。
节点删除过程中将用到开源工具 KubeKey。有关 KubeKey 的更多信息，请访问 GitHub KubeKey 仓库。
说明 本节介绍的节点删除方式仅适用于 Kubernetes 通过 KubeKey 安装的场景。如果您的 Kubernetes 不是通过 KubeKey 安装，请参阅 Kubernetes 官方文档删除节点。
警告 请勿删除控制平面节点，否则集群将出现错误。
请确保节点删除后，集群中剩余的资源仍然足够运行现有的业务。否则，节点删除后可能会出现业务中断。
前提条件 您需要联系 KubeSphere 企业版的交付服务专家获取 KubeSphere 企业版 v4.1.3 安装包。
您需要获取安装配置文件 config-sample.yaml 并将其传输到用于执行本节操作的集群节点。有关更多信息，请参阅安装 Kubernetes 和 KubeSphere 企业版。
警告 如果您无法获取安装配置文件 config-sample.yaml，您需要参阅安装 Kubernetes 和 KubeSphere 企业版 重新创建 config-sample.yaml 文件。重新创建该文件时，请务必确保文件中的集群信息与集群的当前实际情况一致。否则，删除节点后集群可能会出现错误。
操作步骤 将 KubeSphere 企业版安装包传输到任意集群节点，并登录该集群节点。
执行以下命令解压安装包，并进入安装包解压后生成的目录（将 &amp;lt;package name&amp;gt; 替换为安装包的实际名称，将 &amp;lt;directory&amp;gt; 替换为安装包解压后生成的目录）：
tar -zxvf &amp;lt;package name&amp;gt; cd &amp;lt;directory&amp;gt; 执行以下命令为 KubeKey 二进制文件 kk 添加执行权限：</description>
    </item>
    
    <item>
      <title>卸载 Kubernetes 和{ks_product_left}</title>
      <link>/v4.1.3/03-installation-and-upgrade/04-uninstall-kubesphere/02-uninstall-kubernetes-and-kubesphere/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1.3/03-installation-and-upgrade/04-uninstall-kubesphere/02-uninstall-kubernetes-and-kubesphere/</guid>
      <description>本节介绍如何卸载 Kubernetes 和 KubeSphere 企业版。
说明 本节介绍的 Kubernetes 卸载方式仅适用于 Kubernetes 通过 KubeKey 安装的场景。如果您的 Kubernetes 不是通过 KubeKey 安装，请参阅 Kubernetes 官方文档卸载 Kubernetes。
警告 此操作将导致 KubeSphere 企业版集群业务中断，并且无法撤销，请谨慎执行此操作。
前提条件 您需要获取安装配置文件 config-sample.yaml 并将其传输到用于执行本节操作的集群节点。有关更多信息，请参阅安装 Kubernetes 和 KubeSphere 企业版。
说明 如果您无法获取安装配置文件 config-sample.yaml，您需要参阅安装 Kubernetes 和 KubeSphere 企业版 重新创建 config-sample.yaml 文件。重新创建该文件时，请务必确保文件中的集群信息与集群的当前实际情况一致。否则，卸载过程可能会出现错误。
为避免数据丢失，请提前备份所有重要数据。
操作步骤 将 KubeSphere 企业版安装包传输到任意集群节点，并登录该集群节点。
执行以下命令解压安装包，并进入安装包解压后生成的目录（将 &amp;lt;package name&amp;gt; 替换为安装包的实际名称，将 &amp;lt;directory&amp;gt; 替换为安装包解压后生成的目录）：
tar -zxvf &amp;lt;package name&amp;gt; cd &amp;lt;directory&amp;gt; 执行以下命令为 KubeKey 二进制文件 kk 添加执行权限：
sudo chmod +x kk 将安装配置文件 config-sample.</description>
    </item>
    
    <item>
      <title>激活 KubeSphere 企业版</title>
      <link>/v4.1.3/03-installation-and-upgrade/02-install-kubesphere/03-activate-kse/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1.3/03-installation-and-upgrade/02-install-kubesphere/03-activate-kse/</guid>
      <description>登录 KubeSphere 企业版 Web 控制台后，您需要导入许可证（license），激活 KubeSphere 企业版和扩展组件，以体验所有功能。
说明 若您是离线安装的 KubeSphere 企业版，请联系交付服务专家直接获取 license。
步骤 1：购买并获取 license 若您是在线安装的 KubeSphere 企业版，请访问 KubeSphere 企业版官网，点击联系我们，通过微信或 slack 咨询 KubeSphere 企业版和扩展组件 license 的购买方式和获取方式。
步骤 2：导入 license 待获得 license 后，请参阅添加许可证导入 KubeSphere 企业版和扩展组件的 license。
步骤 3：验证激活 若许可证页面显示 KubeSphere 企业版和扩展组件已授权，即表示激活成功，可开始使用 KubeSphere 企业版。</description>
    </item>
    
    <item>
      <title>配置高可用性</title>
      <link>/v4.1.3/03-installation-and-upgrade/01-preparations/03-configure-high-availability/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1.3/03-installation-and-upgrade/01-preparations/03-configure-high-availability/</guid>
      <description>本节介绍如何在生产环境中为 KubeSphere 企业版集群配置多个控制平面节点，以防止单个控制平面节点故障时集群服务中断，从而实现高可用性。如果您的 KubeSphere 企业版集群没有高可用性需求，您可以跳过本节。
说明 KubeSphere 企业版高可用性配置仅支持同时安装 Kubernetes 和 KubeSphere 企业版的场景。如果您在现有的 Kubernetes 集群上安装 KubeSphere 企业版，KubeSphere 企业版安装完成后将使用 Kubernetes 集群现有的高可用性配置。
本节介绍以下高可用性配置方式：
使用本地负载均衡配置。您可以在安装 KubeSphere 企业版的过程中，设置 KubeKey 工具在工作节点上安装 HAProxy 作为各控制平面节点的反向代理，所有工作节点的 Kubernetes 组件将通过 HAProxy 连接各控制平面节点。这种方式需要额外的健康检查机制，所以相较其他方式运行效率有所降低，但可以用于没有专用负载均衡器且服务器数量有限的场景。
使用专用负载均衡器。您可以使用云环境提供的负载均衡器作为各控制平面节点的反向代理。这种方式要求 KubeSphere 企业版集群安装在云环境中，并且云环境可以提供专用负载均衡器。
使用通用服务器作为负载均衡器。您可以在集群节点以外的 Linux 服务器上安装 Keepalived 和 HAProxy 作为负载均衡器。这种方式需要至少 2 台额外的 Linux 服务器。
使用本地负载均衡配置 如需使用 HAProxy 实现高可用性，只需要在安装 KubeSphere 企业版时在安装配置文件 config-sample.yaml 中设置以下参数：
spec: controlPlaneEndpoint: internalLoadbalancer: haproxy domain: lb.kubesphere.local address: &amp;#34;&amp;#34; port: 6443 KubeKey 将自动在工作节点上安装 HAProxy 并完成高可用配置，您无需进行其他操作。有关更多信息请参阅安装 Kubernetes 和 KubeSphere 企业版。</description>
    </item>
    
    <item>
      <title>配置 NeonSAN CSI</title>
      <link>/v4.1.3/03-installation-and-upgrade/01-preparations/04-configure-external-persistent-storage/04-configure-neosan-csi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1.3/03-installation-and-upgrade/01-preparations/04-configure-external-persistent-storage/04-configure-neosan-csi/</guid>
      <description>NeonSAN 是青云的一款企业级分布式块存储系统，NeonSAN CSI 是 NeonSAN 团队面向 Kubernetes 提供的存储插件，具有在 Kubernetes 平台上动态创建持久存储卷的能力。
本节介绍如何在生产环境中为 KubeSphere 企业版集群配置 NeonSAN CSI。
前提条件 您已经成功部署 NeonSAN v2.2.0 及以上版本，且容器集群的每个节点都已安装 QBD 与 NeonSAN 连通。具体操作请咨询青云科技官方解决方案专家或交付服务专家。
您已经安装 Kubernetes v1.16 及其以上版本。
您已经在容器集群的 master 节点安装了 Helm。本节以 Helm 3 为例。
操作步骤 在线安装 NeonSAN CSI 在线安装适用于容器集群能够访问外网的情况。
执行以下命令添加 Helm 仓库，如 https://charts.kubesphere.io/test。
$ helm repo add ks-test https://charts.kubesphere.io/test &amp;#34;ks-test&amp;#34; has been added to your repositories 执行以下命令查看仓库是否添加成功。
$ helm repo list NAME URL ks-test https://charts.kubesphere.io/test 执行以下命令更新仓库的 Chart 列表。</description>
    </item>
    
    <item>
      <title>附录 1：ks-core Helm Chart 升级参数</title>
      <link>/v4.1.3/03-installation-and-upgrade/03-upgrade-kubesphere/05-appendix-ks-core/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1.3/03-installation-and-upgrade/03-upgrade-kubesphere/05-appendix-ks-core/</guid>
      <description>升级 Job 配置 选项 默认值 描述 upgrade.enabled
true
bool - 是否启用升级组件
upgrade.image.registry
&amp;#34;&amp;#34;
string - 设置升级 Job 的镜像仓库地址
upgrade.image.repository
kse/ks-upgrade
string - 设置升级 Job 的镜像名称
upgrade.image.tag
&amp;#34;&amp;#34;
string - 设置升级 Job 的镜像标签
upgrade.image.pullPolicy
Always
string - 设置升级 Job 的镜像拉取策略
upgrade.persistenceVolume.name
ks-upgrade
string - 设置升级 Job 的存储卷
upgrade.persistenceVolume.storageClassName
&amp;#34;&amp;#34;
string - 设置升级 Job 的存储卷类
upgrade.persistenceVolume.accessMode
ReadWriteOnce
string - 设置升级 Job 的存储卷访问模式
upgrade.persistenceVolume.size
5Gi
string - 设置升级 Job 的存储卷容量
upgrade.resources.limit.cpu
1</description>
    </item>
    
    <item>
      <title>附录：KubeSphere Core 高级配置</title>
      <link>/v4.1.3/03-installation-and-upgrade/02-install-kubesphere/05-appendix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1.3/03-installation-and-upgrade/02-install-kubesphere/05-appendix/</guid>
      <description>KubeSphere Helm Chart 选项 常用选项 选项 默认值 描述 adminPassword
&amp;#34;&amp;#34;
string - 为第一个管理员用户设置引导密码。登录后，管理员需要重置密码。如不设置，会使用内置默认密码 P@88w0rd。
hostname
&amp;#34;example.com&amp;#34;
string - KubeSphere Server 完全限定的域名。
ingress.enabled
false
bool - 如果值为 true, 创建 KubeSphere Ingress 网关。
ingress.tls.enabled
true
bool - 如果值为 true, 则为 KubeSphere Ingress 网关启用 HTTPS。
ingress.tls.source
&amp;#34;generation&amp;#34;
string - Ingress 证书的来源，可选项：&amp;#34;generation, importation, letsEncrypt&amp;#34;。
letsEncrypt.email
&amp;#34;&amp;#34;
string - 邮箱地址，证书过期时会收到邮件提醒。
letsEncrypt.environment
&amp;#34;production&amp;#34;
string - 可选项：&amp;#34;staging, production&amp;#34;。测试环境和生产环境证书在速率限制上存在区别，详情见：Let’s Encrypt 官方文档。
高级选项 选项 默认值 描述 internalTLS
false</description>
    </item>
    
    <item>
      <title>配置 NFS</title>
      <link>/v4.1.3/03-installation-and-upgrade/01-preparations/04-configure-external-persistent-storage/05-configure-nfs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1.3/03-installation-and-upgrade/01-preparations/04-configure-external-persistent-storage/05-configure-nfs/</guid>
      <description>本节介绍如何在生产环境中为 KubeSphere 企业版集群配置网络文件系统（NFS）。
说明 NFS 与部分应用不兼容（例如 Prometheus），可能会导致容器组创建失败。如果确实需要在生产环境中使用 NFS，请确保您了解相关风险或咨询青云科技官方解决方案专家或交付服务专家。
搭建 NFS 服务端 为 KubeSphere 企业版配置 NFS 前，您需要先搭建 NFS 服务端。如果您已经有可用的 NFS 服务端，您可以跳过此步骤。以下以 Ubuntu 操作系统安装操作 NFS Kernel Server 为例介绍如何搭建 NFS 服务端。有关其他 NFS 服务端和其他操作系统的具体操作，请参阅 NFS 服务端和操作系统的用户指南。
前提条件 您需要准备一台 Linux 服务器（以下以 Ubuntu 操作系统为例），该服务器必须与 KubeSphere 企业版集群节点网络连通。
操作步骤 登录用于搭建 NFS 服务端的服务器，执行以下命令指安装 NFS Kernel Server：
sudo apt update sudo apt install nfs-kernel-server 执行以下命令创建供 KubeSphere 企业版使用的目录（将 &amp;lt;directory&amp;gt; 替换为实际的目录路径，例如 /mnt/demo）：
sudo mkdir -p &amp;lt;directory&amp;gt; 执行以下命令移除目录的访问限制（将 &amp;lt;directory&amp;gt; 替换为实际的目录路径，例如 /mnt/demo）：
sudo chown nobody:nogroup &amp;lt;directory&amp;gt; sudo chmod 777 &amp;lt;directory&amp;gt; 执行以下命令编辑 NFS Kernel Server 的配置文件：</description>
    </item>
    
    <item>
      <title>配置开源存储系统</title>
      <link>/v4.1.3/03-installation-and-upgrade/01-preparations/04-configure-external-persistent-storage/07-configure-opensource-storage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1.3/03-installation-and-upgrade/01-preparations/04-configure-external-persistent-storage/07-configure-opensource-storage/</guid>
      <description>KubeSphere 支持众多第三方开源存储系统，包括但不限于：
Ceph CSI
GlusterFS
OpenEBS
Longhorn
KubeSphere 企业版不提供第三方开源存储系统的安装包，请到存储系统的官方网站下载安装。</description>
    </item>
    
    <item>
      <title>搜索功能</title>
      <link>/v4.1.3/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1.3/search/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
