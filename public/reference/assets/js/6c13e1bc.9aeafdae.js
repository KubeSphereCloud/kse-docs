"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[8732],{39280:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>g,contentTitle:()=>u,default:()=>b,frontMatter:()=>m,metadata:()=>d,toc:()=>y});var r=s(87462),i=(s(67294),s(3905)),a=s(26389),n=s(94891),o=(s(75190),s(47507)),c=s(24310),p=s(63303),l=(s(75035),s(85162));const m={id:"create-subject-access-review",title:"Create subject access review",description:"Evaluates all of the request attributes against all policies and allows or denies the request.",sidebar_label:"Create subject access review",hide_title:!0,hide_table_of_contents:!0,api:{description:"Evaluates all of the request attributes against all policies and allows or denies the request.",tags:["Access Management"],operationId:"CreateSubjectAccessReview",requestBody:{content:{"application/json":{schema:{description:"TypeMeta describes an individual object in an API response or request with strings representing the type of the object and its API schema version. Structures that are versioned or persisted should inline TypeMeta.",required:["spec"],properties:{apiVersion:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},kind:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},spec:{properties:{extra:{type:"object",additionalProperties:{type:"array",items:{type:"string"}}},groups:{type:"array",items:{type:"string"}},nonResourceAttributes:{properties:{path:{type:"string"},verb:{type:"string"}}},resourceAttributes:{properties:{group:{type:"string"},name:{type:"string"},namespace:{type:"string"},resource:{type:"string"},resourceScope:{type:"string"},subresource:{type:"string"},verb:{type:"string"},version:{type:"string"},workspace:{type:"string"}}},uid:{type:"string"},user:{type:"string"}}},status:{required:["allowed"],properties:{allowed:{type:"boolean"},denied:{type:"boolean"},evaluationError:{type:"string"},reason:{type:"string"}}}}}}},required:!0},responses:{200:{description:"ok",content:{"application/json":{schema:{description:"TypeMeta describes an individual object in an API response or request with strings representing the type of the object and its API schema version. Structures that are versioned or persisted should inline TypeMeta.",required:["spec"],properties:{apiVersion:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},kind:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},spec:{properties:{extra:{type:"object",additionalProperties:{type:"array",items:{type:"string"}}},groups:{type:"array",items:{type:"string"}},nonResourceAttributes:{properties:{path:{type:"string"},verb:{type:"string"}}},resourceAttributes:{properties:{group:{type:"string"},name:{type:"string"},namespace:{type:"string"},resource:{type:"string"},resourceScope:{type:"string"},subresource:{type:"string"},verb:{type:"string"},version:{type:"string"},workspace:{type:"string"}}},uid:{type:"string"},user:{type:"string"}}},status:{required:["allowed"],properties:{allowed:{type:"boolean"},denied:{type:"boolean"},evaluationError:{type:"string"},reason:{type:"string"}}}}}}}}},method:"post",path:"/kapis/iam.kubesphere.io/v1beta1/subjectaccessreviews",security:[{BearerToken:[]}],securitySchemes:{BearerToken:{description:"Bearer Token Authentication",type:"apiKey",name:"Authorization",in:"header"}},jsonRequestBodyExample:{apiVersion:"string",kind:"string",spec:{extra:{},groups:["string"],nonResourceAttributes:{path:"string",verb:"string"},resourceAttributes:{group:"string",name:"string",namespace:"string",resource:"string",resourceScope:"string",subresource:"string",verb:"string",version:"string",workspace:"string"},uid:"string",user:"string"},status:{allowed:!0,denied:!0,evaluationError:"string",reason:"string"}},info:{description:"KubeSphere Enterprise OpenAPI",title:"Introduction",contact:{name:"KubeSphere",url:"https://kubesphere.com.cn",email:"support@kubesphere.cloud"},version:"v4.0.0"},postman:{name:"Create subject access review",description:{content:"Evaluates all of the request attributes against all policies and allows or denies the request.",type:"text/plain"},url:{path:["kapis","iam.kubesphere.io","v1beta1","subjectaccessreviews"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"api/v4.0.0/introduction",custom_edit_url:null},u=void 0,d={unversionedId:"api/v4.0.0/create-subject-access-review",id:"api/v4.0.0/create-subject-access-review",title:"Create subject access review",description:"Evaluates all of the request attributes against all policies and allows or denies the request.",source:"@site/docs/api/v4.0.0/create-subject-access-review.api.mdx",sourceDirName:"api/v4.0.0",slug:"/api/v4.0.0/create-subject-access-review",permalink:"/reference/api/v4.0.0/create-subject-access-review",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"create-subject-access-review",title:"Create subject access review",description:"Evaluates all of the request attributes against all policies and allows or denies the request.",sidebar_label:"Create subject access review",hide_title:!0,hide_table_of_contents:!0,api:{description:"Evaluates all of the request attributes against all policies and allows or denies the request.",tags:["Access Management"],operationId:"CreateSubjectAccessReview",requestBody:{content:{"application/json":{schema:{description:"TypeMeta describes an individual object in an API response or request with strings representing the type of the object and its API schema version. Structures that are versioned or persisted should inline TypeMeta.",required:["spec"],properties:{apiVersion:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},kind:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},spec:{properties:{extra:{type:"object",additionalProperties:{type:"array",items:{type:"string"}}},groups:{type:"array",items:{type:"string"}},nonResourceAttributes:{properties:{path:{type:"string"},verb:{type:"string"}}},resourceAttributes:{properties:{group:{type:"string"},name:{type:"string"},namespace:{type:"string"},resource:{type:"string"},resourceScope:{type:"string"},subresource:{type:"string"},verb:{type:"string"},version:{type:"string"},workspace:{type:"string"}}},uid:{type:"string"},user:{type:"string"}}},status:{required:["allowed"],properties:{allowed:{type:"boolean"},denied:{type:"boolean"},evaluationError:{type:"string"},reason:{type:"string"}}}}}}},required:!0},responses:{200:{description:"ok",content:{"application/json":{schema:{description:"TypeMeta describes an individual object in an API response or request with strings representing the type of the object and its API schema version. Structures that are versioned or persisted should inline TypeMeta.",required:["spec"],properties:{apiVersion:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},kind:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},spec:{properties:{extra:{type:"object",additionalProperties:{type:"array",items:{type:"string"}}},groups:{type:"array",items:{type:"string"}},nonResourceAttributes:{properties:{path:{type:"string"},verb:{type:"string"}}},resourceAttributes:{properties:{group:{type:"string"},name:{type:"string"},namespace:{type:"string"},resource:{type:"string"},resourceScope:{type:"string"},subresource:{type:"string"},verb:{type:"string"},version:{type:"string"},workspace:{type:"string"}}},uid:{type:"string"},user:{type:"string"}}},status:{required:["allowed"],properties:{allowed:{type:"boolean"},denied:{type:"boolean"},evaluationError:{type:"string"},reason:{type:"string"}}}}}}}}},method:"post",path:"/kapis/iam.kubesphere.io/v1beta1/subjectaccessreviews",security:[{BearerToken:[]}],securitySchemes:{BearerToken:{description:"Bearer Token Authentication",type:"apiKey",name:"Authorization",in:"header"}},jsonRequestBodyExample:{apiVersion:"string",kind:"string",spec:{extra:{},groups:["string"],nonResourceAttributes:{path:"string",verb:"string"},resourceAttributes:{group:"string",name:"string",namespace:"string",resource:"string",resourceScope:"string",subresource:"string",verb:"string",version:"string",workspace:"string"},uid:"string",user:"string"},status:{allowed:!0,denied:!0,evaluationError:"string",reason:"string"}},info:{description:"KubeSphere Enterprise OpenAPI",title:"Introduction",contact:{name:"KubeSphere",url:"https://kubesphere.com.cn",email:"support@kubesphere.cloud"},version:"v4.0.0"},postman:{name:"Create subject access review",description:{content:"Evaluates all of the request attributes against all policies and allows or denies the request.",type:"text/plain"},url:{path:["kapis","iam.kubesphere.io","v1beta1","subjectaccessreviews"],host:["{{baseUrl}}"],query:[],variable:[]},header:[{key:"Content-Type",value:"application/json"},{key:"Accept",value:"application/json"}],method:"POST",body:{mode:"raw",raw:'""',options:{raw:{language:"json"}}}}},sidebar_class_name:"post api-method",info_path:"api/v4.0.0/introduction",custom_edit_url:null},sidebar:"kubesphere-v4.0.0",previous:{title:"Update member from the namespace",permalink:"/reference/api/v4.0.0/update-namespace-member"},next:{title:"List all role templates of the specified user",permalink:"/reference/api/v4.0.0/list-role-template-of-user"}},g={},y=[{value:"Create subject access review",id:"create-subject-access-review",level:2}],h={toc:y},v="wrapper";function b(e){let{components:t,...s}=e;return(0,i.kt)(v,(0,r.Z)({},h,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"create-subject-access-review"},"Create subject access review"),(0,i.kt)("p",null,"Evaluates all of the request attributes against all policies and allows or denies the request."),(0,i.kt)(n.Z,{mdxType:"MimeTabs"},(0,i.kt)(l.Z,{label:"application/json",value:"application/json-schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Request Body"),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"apiVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"kind",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"spec"),(0,i.kt)("span",{style:{opacity:"0.6"}}," "),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"extra"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"property name*"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem",marginLeft:"1rem"}},(0,i.kt)("p",null,"string")),(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]")))))))),(0,i.kt)(c.Z,{collapsible:!1,name:"groups",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",items:{type:"string"}},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"nonResourceAttributes"),(0,i.kt)("span",{style:{opacity:"0.6"}}," ")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"path",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"verb",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"})))),(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"resourceAttributes"),(0,i.kt)("span",{style:{opacity:"0.6"}}," ")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"group",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"name",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"namespace",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"resource",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"resourceScope",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"subresource",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"verb",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"version",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"workspace",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"})))),(0,i.kt)(c.Z,{collapsible:!1,name:"uid",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"user",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"})))),(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"status"),(0,i.kt)("span",{style:{opacity:"0.6"}}," ")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"allowed",required:!0,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"denied",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"evaluationError",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"})))))))),(0,i.kt)("div",null,(0,i.kt)(a.Z,{mdxType:"ApiTabs"},(0,i.kt)(l.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"ok")),(0,i.kt)("div",null,(0,i.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(l.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(p.Z,{mdxType:"SchemaTabs"},(0,i.kt)(l.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{textAlign:"left"}},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"apiVersion",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"kind",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"spec"),(0,i.kt)("span",{style:{opacity:"0.6"}}," "),(0,i.kt)("strong",{style:{fontSize:"var(--ifm-code-font-size)",color:"var(--openapi-required)"}}," required")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"extra"),(0,i.kt)("span",{style:{opacity:"0.6"}}," object")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"property name*"),(0,i.kt)("span",{style:{opacity:"0.6"}}," string[]")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem",marginLeft:"1rem"}},(0,i.kt)("p",null,"string")),(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]")))))))),(0,i.kt)(c.Z,{collapsible:!1,name:"groups",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{type:"array",items:{type:"string"}},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"nonResourceAttributes"),(0,i.kt)("span",{style:{opacity:"0.6"}}," ")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"path",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"verb",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"})))),(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"resourceAttributes"),(0,i.kt)("span",{style:{opacity:"0.6"}}," ")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"group",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"name",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"namespace",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"resource",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"resourceScope",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"subresource",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"verb",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"version",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"workspace",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"})))),(0,i.kt)(c.Z,{collapsible:!1,name:"uid",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"user",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"})))),(0,i.kt)(c.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{}},(0,i.kt)("summary",{style:{}},(0,i.kt)("strong",null,"status"),(0,i.kt)("span",{style:{opacity:"0.6"}}," ")),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)(c.Z,{collapsible:!1,name:"allowed",required:!0,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"denied",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"evaluationError",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(c.Z,{collapsible:!1,name:"reason",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"},mdxType:"SchemaItem"}))))))),(0,i.kt)(l.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(o.Z,{responseExample:'{\n  "apiVersion": "string",\n  "kind": "string",\n  "spec": {\n    "extra": {},\n    "groups": [\n      "string"\n    ],\n    "nonResourceAttributes": {\n      "path": "string",\n      "verb": "string"\n    },\n    "resourceAttributes": {\n      "group": "string",\n      "name": "string",\n      "namespace": "string",\n      "resource": "string",\n      "resourceScope": "string",\n      "subresource": "string",\n      "verb": "string",\n      "version": "string",\n      "workspace": "string"\n    },\n    "uid": "string",\n    "user": "string"\n  },\n  "status": {\n    "allowed": true,\n    "denied": true,\n    "evaluationError": "string",\n    "reason": "string"\n  }\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}b.isMDXComponent=!0}}]);