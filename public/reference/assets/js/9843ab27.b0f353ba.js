"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[5205],{62012:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>u,default:()=>v,frontMatter:()=>d,metadata:()=>y,toc:()=>g});var s=a(87462),r=(a(67294),a(3905)),i=a(26389),n=a(94891),p=a(75190),o=a(47507),c=a(24310),m=a(63303),l=(a(75035),a(85162));const d={id:"list-namespaced-resources",title:"List resources at namespace scope",description:"List resources at namespace scope",sidebar_label:"List resources at namespace scope",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Namespaced Resources"],operationId:"list-namespaced-resources",deprecated:!0,parameters:[{description:"The specified namespace.",name:"namespace",in:"path",required:!0,schema:{type:"string"}},{description:"namespace level resource type, e.g. pods,jobs,configmaps,services.",name:"resources",in:"path",required:!0,schema:{type:"string"}},{description:"name used to do filtering",name:"name",in:"query",schema:{type:"string"}},{description:"page",name:"page",in:"query",schema:{type:"string",format:"page=%d",default:"page=1"}},{description:"limit",name:"limit",in:"query",schema:{type:"string"}},{description:"sort parameters, e.g. reverse=true",name:"ascending",in:"query",schema:{type:"string",default:"ascending=false"}},{description:"sort parameters, e.g. orderBy=createTime",name:"sortBy",in:"query",schema:{type:"string"}},{description:"field selector used for filtering, you can use the = , == and != operators with field selectors( = and == mean the same thing), e.g. fieldSelector=type=kubernetes.io/dockerconfigjson, multiple separated by comma",name:"fieldSelector",in:"query",schema:{type:"string"}}],responses:{200:{description:"ok",content:{"application/json":{schema:{required:["items","totalItems"],properties:{items:{type:"array",items:{}},totalItems:{type:"integer",format:"int32"}}}}}}},description:"List resources at namespace scope",method:"get",path:"/kapis/resources.kubesphere.io/v1alpha3/namespaces/{namespace}/{resources}",security:[{BearerToken:[]}],securitySchemes:{BearerToken:{description:"Bearer Token Authentication",type:"apiKey",name:"Authorization",in:"header"}},info:{description:"KubeSphere Enterprise OpenAPI",title:"Introduction",contact:{name:"KubeSphere",url:"https://kubesphere.com.cn",email:"support@kubesphere.cloud"},version:"v4.0.0"},postman:{name:"List resources at namespace scope",description:{type:"text/plain"},url:{path:["kapis","resources.kubesphere.io","v1alpha3","namespaces",":namespace",":resources"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"name used to do filtering",type:"text/plain"},key:"name",value:""},{disabled:!1,description:{content:"page",type:"text/plain"},key:"page",value:""},{disabled:!1,description:{content:"limit",type:"text/plain"},key:"limit",value:""},{disabled:!1,description:{content:"sort parameters, e.g. reverse=true",type:"text/plain"},key:"ascending",value:""},{disabled:!1,description:{content:"sort parameters, e.g. orderBy=createTime",type:"text/plain"},key:"sortBy",value:""},{disabled:!1,description:{content:"field selector used for filtering, you can use the = , == and != operators with field selectors( = and == mean the same thing), e.g. fieldSelector=type=kubernetes.io/dockerconfigjson, multiple separated by comma",type:"text/plain"},key:"fieldSelector",value:""}],variable:[{disabled:!1,description:{content:"(Required) The specified namespace.",type:"text/plain"},type:"any",value:"",key:"namespace"},{disabled:!1,description:{content:"(Required) namespace level resource type, e.g. pods,jobs,configmaps,services.",type:"text/plain"},type:"any",value:"",key:"resources"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"api/v4.0.0/introduction",custom_edit_url:null},u=void 0,y={unversionedId:"api/v4.0.0/list-namespaced-resources",id:"api/v4.0.0/list-namespaced-resources",title:"List resources at namespace scope",description:"List resources at namespace scope",source:"@site/docs/api/v4.0.0/list-namespaced-resources.api.mdx",sourceDirName:"api/v4.0.0",slug:"/api/v4.0.0/list-namespaced-resources",permalink:"/reference/api/v4.0.0/list-namespaced-resources",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"list-namespaced-resources",title:"List resources at namespace scope",description:"List resources at namespace scope",sidebar_label:"List resources at namespace scope",hide_title:!0,hide_table_of_contents:!0,api:{tags:["Namespaced Resources"],operationId:"list-namespaced-resources",deprecated:!0,parameters:[{description:"The specified namespace.",name:"namespace",in:"path",required:!0,schema:{type:"string"}},{description:"namespace level resource type, e.g. pods,jobs,configmaps,services.",name:"resources",in:"path",required:!0,schema:{type:"string"}},{description:"name used to do filtering",name:"name",in:"query",schema:{type:"string"}},{description:"page",name:"page",in:"query",schema:{type:"string",format:"page=%d",default:"page=1"}},{description:"limit",name:"limit",in:"query",schema:{type:"string"}},{description:"sort parameters, e.g. reverse=true",name:"ascending",in:"query",schema:{type:"string",default:"ascending=false"}},{description:"sort parameters, e.g. orderBy=createTime",name:"sortBy",in:"query",schema:{type:"string"}},{description:"field selector used for filtering, you can use the = , == and != operators with field selectors( = and == mean the same thing), e.g. fieldSelector=type=kubernetes.io/dockerconfigjson, multiple separated by comma",name:"fieldSelector",in:"query",schema:{type:"string"}}],responses:{200:{description:"ok",content:{"application/json":{schema:{required:["items","totalItems"],properties:{items:{type:"array",items:{}},totalItems:{type:"integer",format:"int32"}}}}}}},description:"List resources at namespace scope",method:"get",path:"/kapis/resources.kubesphere.io/v1alpha3/namespaces/{namespace}/{resources}",security:[{BearerToken:[]}],securitySchemes:{BearerToken:{description:"Bearer Token Authentication",type:"apiKey",name:"Authorization",in:"header"}},info:{description:"KubeSphere Enterprise OpenAPI",title:"Introduction",contact:{name:"KubeSphere",url:"https://kubesphere.com.cn",email:"support@kubesphere.cloud"},version:"v4.0.0"},postman:{name:"List resources at namespace scope",description:{type:"text/plain"},url:{path:["kapis","resources.kubesphere.io","v1alpha3","namespaces",":namespace",":resources"],host:["{{baseUrl}}"],query:[{disabled:!1,description:{content:"name used to do filtering",type:"text/plain"},key:"name",value:""},{disabled:!1,description:{content:"page",type:"text/plain"},key:"page",value:""},{disabled:!1,description:{content:"limit",type:"text/plain"},key:"limit",value:""},{disabled:!1,description:{content:"sort parameters, e.g. reverse=true",type:"text/plain"},key:"ascending",value:""},{disabled:!1,description:{content:"sort parameters, e.g. orderBy=createTime",type:"text/plain"},key:"sortBy",value:""},{disabled:!1,description:{content:"field selector used for filtering, you can use the = , == and != operators with field selectors( = and == mean the same thing), e.g. fieldSelector=type=kubernetes.io/dockerconfigjson, multiple separated by comma",type:"text/plain"},key:"fieldSelector",value:""}],variable:[{disabled:!1,description:{content:"(Required) The specified namespace.",type:"text/plain"},type:"any",value:"",key:"namespace"},{disabled:!1,description:{content:"(Required) namespace level resource type, e.g. pods,jobs,configmaps,services.",type:"text/plain"},type:"any",value:"",key:"resources"}]},header:[{key:"Accept",value:"application/json"}],method:"GET"}},sidebar_class_name:"get api-method",info_path:"api/v4.0.0/introduction",custom_edit_url:null},sidebar:"kubesphere-v4.0.0",previous:{title:"List image tags",permalink:"/reference/api/v4.0.0/get-repository-tags"},next:{title:"Get namespace scope resource",permalink:"/reference/api/v4.0.0/get-namespaced-resource"}},h={},g=[{value:"List resources at namespace scope",id:"list-resources-at-namespace-scope",level:2}],k={toc:g},f="wrapper";function v(e){let{components:t,...a}=e;return(0,r.kt)(f,(0,s.Z)({},k,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"list-resources-at-namespace-scope"},"List resources at namespace scope"),(0,r.kt)("admonition",{title:"deprecated",type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This endpoint has been deprecated and may be removed in future versions of the API.")),(0,r.kt)("p",null,"List resources at namespace scope"),(0,r.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{}},(0,r.kt)("strong",null,"Path Parameters")),(0,r.kt)("div",null,(0,r.kt)("ul",null,(0,r.kt)(p.Z,{className:"paramsItem",param:{description:"The specified namespace.",name:"namespace",in:"path",required:!0,schema:{type:"string"}},mdxType:"ParamsItem"}),(0,r.kt)(p.Z,{className:"paramsItem",param:{description:"namespace level resource type, e.g. pods,jobs,configmaps,services.",name:"resources",in:"path",required:!0,schema:{type:"string"}},mdxType:"ParamsItem"})))),(0,r.kt)("details",{style:{marginBottom:"1rem"},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{}},(0,r.kt)("strong",null,"Query Parameters")),(0,r.kt)("div",null,(0,r.kt)("ul",null,(0,r.kt)(p.Z,{className:"paramsItem",param:{description:"name used to do filtering",name:"name",in:"query",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,r.kt)(p.Z,{className:"paramsItem",param:{description:"page",name:"page",in:"query",schema:{type:"string",format:"page=%d",default:"page=1"}},mdxType:"ParamsItem"}),(0,r.kt)(p.Z,{className:"paramsItem",param:{description:"limit",name:"limit",in:"query",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,r.kt)(p.Z,{className:"paramsItem",param:{description:"sort parameters, e.g. reverse=true",name:"ascending",in:"query",schema:{type:"string",default:"ascending=false"}},mdxType:"ParamsItem"}),(0,r.kt)(p.Z,{className:"paramsItem",param:{description:"sort parameters, e.g. orderBy=createTime",name:"sortBy",in:"query",schema:{type:"string"}},mdxType:"ParamsItem"}),(0,r.kt)(p.Z,{className:"paramsItem",param:{description:"field selector used for filtering, you can use the = , == and != operators with field selectors( = and == mean the same thing), e.g. fieldSelector=type=kubernetes.io/dockerconfigjson, multiple separated by comma",name:"fieldSelector",in:"query",schema:{type:"string"}},mdxType:"ParamsItem"})))),(0,r.kt)("div",null,(0,r.kt)(i.Z,{mdxType:"ApiTabs"},(0,r.kt)(l.Z,{label:"200",value:"200",mdxType:"TabItem"},(0,r.kt)("div",null,(0,r.kt)("p",null,"ok")),(0,r.kt)("div",null,(0,r.kt)(n.Z,{schemaType:"response",mdxType:"MimeTabs"},(0,r.kt)(l.Z,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,r.kt)(m.Z,{mdxType:"SchemaTabs"},(0,r.kt)(l.Z,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,r.kt)("details",{style:{},"data-collapsed":!1,open:!0},(0,r.kt)("summary",{style:{textAlign:"left"}},(0,r.kt)("strong",null,"Schema")),(0,r.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.kt)("ul",{style:{marginLeft:"1rem"}},(0,r.kt)(c.Z,{collapsible:!1,name:"items",required:!0,schemaName:"undefined[]",qualifierMessage:void 0,schema:{type:"array",items:{}},mdxType:"SchemaItem"}),(0,r.kt)(c.Z,{collapsible:!1,name:"totalItems",required:!0,schemaName:"int32",qualifierMessage:void 0,schema:{type:"integer",format:"int32"},mdxType:"SchemaItem"})))),(0,r.kt)(l.Z,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,r.kt)(o.Z,{responseExample:'{\n  "items": [\n    null\n  ],\n  "totalItems": 0\n}',language:"json",mdxType:"ResponseSamples"}))))))))))}v.isMDXComponent=!0}}]);