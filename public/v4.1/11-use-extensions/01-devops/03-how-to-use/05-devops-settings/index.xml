<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DevOps 项目设置 on KubeSphere 企业版</title>
    <link>/v4.1/11-use-extensions/01-devops/03-how-to-use/05-devops-settings/</link>
    <description>Recent content in DevOps 项目设置 on KubeSphere 企业版</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>©2022 QingCloud, Inc. All rights reserved</copyright><atom:link href="/v4.1/11-use-extensions/01-devops/03-how-to-use/05-devops-settings/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>凭证管理</title>
      <link>/v4.1/11-use-extensions/01-devops/03-how-to-use/05-devops-settings/01-credential-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1/11-use-extensions/01-devops/03-how-to-use/05-devops-settings/01-credential-management/</guid>
      <description>凭证是包含敏感信息的对象，例如用户名和密码、SSH 密钥和令牌 (Token)。当 KubeSphere 企业版 DevOps 流水线运行时，会与外部环境中的对象进行交互，以执行一系列任务，包括拉取代码、推送和拉取镜像以及运行脚本等。此过程中需要提供相应的凭证，而这些凭证不会明文出现在流水线中。
具有必要权限的 DevOps 项目用户可以为 Jenkins 流水线配置凭证。用户在 DevOps 项目中添加或配置这些凭证后，便可以在 DevOps 项目中使用这些凭证与第三方应用程序进行交互。
目前，您可以在 DevOps 项目中创建以下类型的凭证：
用户名和密码：用户名和密码，可以作为单独的组件处理，或者作为用冒号分隔的字符串（格式为 username:password）处理，例如 GitHub 和 GitLab 账户。
SSH 密钥：带有私钥的用户名，SSH 公钥/私钥对。
访问令牌：具有访问权限的令牌。
本文档演示如何在 DevOps 项目中创建和管理凭证。有关如何使用凭证的更多信息，请参阅使用 Jenkinsfile 创建流水线和使用图形编辑面板创建流水线。
前提条件 KubeSphere 企业版平台需要安装并启用 DevOps 扩展组件。
已有一个企业空间、一个 DevOps 项目和一个用户 (例如 project-regular)，并已邀请该用户至 DevOps 项目且授予 operator 角色。请参阅角色和成员管理。
创建凭证 以 project-regular 用户登录 KubeSphere 企业版 Web 控制台。
点击企业空间管理并进入您的 DevOps 项目。
在左侧导航栏，选择 DevOps 项目设置 &amp;gt; 凭证。
在右侧的凭证区域，点击创建。
在弹出的创建凭证对话框，输入凭证名称，并选择凭证类型。不同的凭证类型需要设置的参数不同，具体请参考以下内容。
创建用户名和密码凭证
以创建 GitHub 用户凭证为例，您需要设置以下参数：</description>
    </item>
    
    <item>
      <title>角色和成员管理</title>
      <link>/v4.1/11-use-extensions/01-devops/03-how-to-use/05-devops-settings/02-role-and-member-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1/11-use-extensions/01-devops/03-how-to-use/05-devops-settings/02-role-and-member-management/</guid>
      <description>本文档演示如何在 DevOps 项目中管理角色和成员。
在 DevOps 项目范围内，您可以向角色授予以下资源的权限：
DevOps 项目设置
流水线
凭证
持续部署
代码仓库
访问控制
前提条件 已创建一个 DevOps 项目，例如 demo-devops。
已有一个在 DevOps 项目级别具有 admin 角色的用户（例如 devops-admin）。
内置角色 在 DevOps 项目角色中，有三个可用的内置角色，如下所示。创建 DevOps 项目时，会自动创建内置角色，并且无法编辑或删除这些角色。
内置角色 描述信息 viewer
DevOps 项目观察者，查看 DevOps 项目中的所有资源。
operator
DevOps 项目普通成员，管理 DevOps 凭证和流水线以及查看 DevOps 项目中的成员和角色。
admin
DevOps 项目管理员，管理 DevOps 项目中的所有资源。
创建 DevOps 项目角色 以 devops-admin 用户登录 KubeSphere 企业版 Web 控制台。
前往 DevOps 项目页面点击一个 DevOps 项目（例如 demo-devops）。
说明 本文档使用 devops-admin 账户作为示例。只要账户被授予的角色包含 DevOps 项目级别访问控制中的成员查看、角色管理和角色查看的权限，此账户便可以创建 DevOps 项目角色。</description>
    </item>
    
    <item>
      <title>添加持续部署白名单</title>
      <link>/v4.1/11-use-extensions/01-devops/03-how-to-use/05-devops-settings/03-add-cd-allowlist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1/11-use-extensions/01-devops/03-how-to-use/05-devops-settings/03-add-cd-allowlist/</guid>
      <description>KubeSphere 企业版支持通过设置白名单，限制资源持续部署的代码仓库和目标位置。
本文档介绍如何添加持续部署白名单。
前提条件 KubeSphere 企业版平台需要安装并启用 DevOps 扩展组件。
已有一个企业空间、一个 DevOps 项目和一个用户 (例如 project-regular)，并已邀请该用户至 DevOps 项目且授予 operator 角色。请参阅角色和成员管理。
已导入代码仓库。
操作步骤 以 project-regular 用户登录 KubeSphere 企业版 Web 控制台。
点击企业空间管理并进入您的 DevOps 项目。
在左侧导航栏，选择 DevOps 项目设置 &amp;gt; 基本信息。
在右侧基本信息下的持续部署白名单区域，点击编辑白名单。
在弹出的编辑白名单对话框，选择代码仓库、部署集群和项目，点击确定。点击添加可添加多个代码仓库和部署位置。</description>
    </item>
    
    <item>
      <title>为依赖项缓存设置 CI 节点</title>
      <link>/v4.1/11-use-extensions/01-devops/03-how-to-use/05-devops-settings/04-set-ci-node/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/v4.1/11-use-extensions/01-devops/03-how-to-use/05-devops-settings/04-set-ci-node/</guid>
      <description>构建应用程序通常需要拉取不同的依赖项。拉取过程中可能会遇到某些问题，例如拉取时间长、网络不稳定，进而导致构建失败。为了提供更可靠和稳定的环境，可以配置节点或节点组，专门用于持续集成 (CI)，并通过使用缓存来加快构建过程。
本文档演示如何设置 CI 节点，以便 KubeSphere 企业版将流水线的任务调度到这些节点。
前提条件 您需要在 KubeSphere 企业版平台具有集群管理权限。
标记 CI 节点 以具有集群管理权限的账户登录 KubeSphere 企业版 Web 控制台。
点击集群管理，进入一个集群。
在左侧导航栏中选择节点下的集群节点，查看当前集群中的现有节点。
从列表中选择一个节点用来运行 CI 任务。点击节点名称转到其详情页面，点击更多操作 &amp;gt; 编辑标签。
在弹出的对话框中，在键为 node-role.kubernetes.io/worker 的后面，输入 ci 作为此标签的值，点击确定。
给 CI 节点添加污点 流水线一般会根据节点亲和性来确定是否调度任务到某一节点。如果要将节点专用于 CI 任务，即不允许将其他工作负载调度到该节点，可以在该节点上添加污点。
点击更多操作 &amp;gt; 编辑污点。
点击添加，输入键 node.kubernetes.io/ci 而不指定值。根据需要选择阻止调度、尽可能阻止调度或阻止调度并驱逐现有容器组 。
点击确定。KubeSphere 企业版将根据您设置的污点调度任务。</description>
    </item>
    
  </channel>
</rss>
